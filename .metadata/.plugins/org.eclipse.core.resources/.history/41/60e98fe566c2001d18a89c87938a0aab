package javasweeftsecondsteptasks.tasks;

public class Fourth {
	
	/* პრობლება:
	მოცემულია ორი binary string a და b, დააბრუნეთ მათი ჯამი, როგორც binary string.
	მაგ: a = "1010" b = "1011" , მათი ჯამი იქნება "10101"
	 */
	
	/* გადაწყვეტა:
	ორობითი სტრიქონების შესაკრებად გამოვიყენებ ქვეშმიწერით მიმატების პრინციპს, რომლის შემთხვევაშიც 
	1 + 0 > 1
	0 + 1 > 1
	1 + 1 > 0 და დავიმახსოვრებთ(carry) გადასამატებელ მნიშვნელობას, რადგან ორობითში მხოლოდ 0-ით და 1-ით შემოვიფარგლებით.
	*/

	public String addTwoBinaryStrings(String a, String b) {
		
		// შეკრება უნდა დავიწყოთ ბოლოდან, მიღებული შედეგები კი გადავიტანოთ ახალ სტრინგში, ამისათვის გამოვიყენე StringBuilder;
		StringBuilder sb = new StringBuilder();
		
		// ასევე ვსაზღვრავ ორ ინტეჯერს, რომლებიც აღნიშნავენ თუ სტრინგის რომელ სიმბოლოზე ხდება მოქმედება. 
		// რადგანაც შეკრება უნდა დავიწყოთ ბოლოდან, მნიშვნელობებიც ბოლო წევრების შესაბამის წევრებზე დავაყენეთ.
		int i = a.length() - 1;
		int j = b.length() - 1;
		
		// carry ცვლადი წარმოადგენს გადასატან მნიშვნელობას, რომელიც შესაძლოა რომელიმე წევრების ჯამის შედეგად დაგვრჩეს.
		int carry = 0;
		
		// while loop-ში ვამოწმებთ თუ ერთ-ერთი სტრიქონი მაინც არ დამთავრებულა, რადგან მარტივად შესაძლებელია, რომ რომელიმე მათგანი უფრო მოკლე იყოს. 
		while(i>= 0 || j>=0) {
			
			int sum = carry;
			sum += a.charAt(i) - '0';
			
		}
		
	}
	
}
