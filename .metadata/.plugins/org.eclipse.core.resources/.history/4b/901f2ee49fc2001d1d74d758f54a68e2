package javasweeftsecondsteptasks.tasks;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
 
public class MyStructure {
 
	/* პრობლება:
	დაწერეთ საკუთარი მონაცემთა სტრუქტურა, რომელიც საშუალებას მოგვცემს O(1) დროში წავშალოთ ელემენტი.
	*/
	
	/* გადაწყვეტა:
	
	*/

	
    private ArrayList<Integer> arr; // A resizable array to hold the elements
    private Map<Integer, Integer> map; // A hash map to store the indexes of elements in arr
 
    // Constructor to initialize the array and hash map
    public MyStructure() {
        arr = new ArrayList<Integer>();
        map = new HashMap<Integer, Integer>();
    }
 
    // Method to add an element to the data structure
    public void add(int x) {
        // If element is already present, do nothing
        if (!map.containsKey(x)) {
            // Else add element to the end of the array
            int index = arr.size();
            arr.add(x);
            // And store its index in the hash map
            map.put(x, index);
        }
    }
    
/*    
 * 1 
 * 2 
 * 3 
 * 4 
 * 5 
 * 6 
 * 7
    
   1-0
   2-1 
   3-2 
   
   4-3 //ვშლით ამას
   
   5-4 
   6-5 
   7-6
*/    
 
    // Method to remove an element from the data structure
    public void remove(int x) {
        // If element is not present, do nothing
        if (map.containsKey(x)) {
            // Else remove element from the hash map and get its index in the array
            int index = map.get(x); // იწერება 3
            map.remove(x);
            // Swap the element with the last element in the array and remove the last element
            int lastIndex = arr.size() - 1; // 
            arr.set(index, arr.get(lastIndex));
            arr.remove(lastIndex);
            // Update the hash map with the new index of the element that was swapped with the last element
            map.put(arr.get(index), index);
        }
    }
    
    public static void main(String[] args) {
    	
    }
    
}